{"version":3,"sources":["index.js"],"names":["App","_this","Object","_Users_sowmya_Singalong_SingALong_ReactJS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_sowmya_Singalong_SingALong_ReactJS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_sowmya_Singalong_SingALong_ReactJS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","searchHandler","evt","searchQuery","target","value","query","queryUrl","jsonp","err","data","console","error","message","setState","songs","results","log","selectSong","song","playSong","hearSong","state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_audio_player__WEBPACK_IMPORTED_MODULE_9___default","src","previewUrl","autoPlay","controls","name","_this2","map","onClick","bind","style","width","height","margin","background","textAlign","display","border","trackName","artworkUrl100","artistName","collectionName","color","type","onChange","Component","render","document","getElementById"],"mappings":"0OAOMA,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QASFI,cAAgB,SAACC,GACfR,EAAKS,YAAYD,EAAIE,OAAOC,QAXhBX,EAedS,YAAa,SAACG,GACZ,IAAMC,EAAW,6DAA+DD,EAClFE,IAAMD,EAAU,KAAM,SAACE,EAAKC,GACpBD,EACFE,QAAQC,MAAMH,EAAII,UAElBnB,EAAKoB,SAAS,CAACC,MAAOL,EAAKM,UAC3BL,QAAQM,IAAIP,EAAKM,aAtBTtB,EA0BhBwB,WAAY,SAACC,GACXzB,EAAKoB,SAAS,CAACM,SAAUD,IACzBR,QAAQM,IAAIE,IA5BEzB,EA+BhB2B,SAAW,WACT,GAAI3B,EAAK4B,MAAMF,SAGX,OAFAT,QAAQM,IAAI,YACZN,QAAQM,IAAIvB,EAAK4B,MAAMF,UACdG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,IAAKjC,EAAK4B,MAAMF,SAASQ,WACzBC,UAAQ,EACRC,UAAQ,MArCtBpC,EAAK4B,MAAQ,CACXP,MAAO,GACPgB,KAAM,QACNX,SAAU,MALA1B,wEAgDL,IAAAsC,EAAAnC,KACDkB,EAAQlB,KAAKyB,MAAMP,MAAMkB,IAAI,SAAAd,GAAI,OACvCI,EAAAC,EAAAC,cAAA,OAAKS,QAASF,EAAKd,WAAWiB,KAAKH,EAAKb,GAAOiB,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,OAAQ,OAAQC,WAAY,UAAWC,UAAW,SAAUC,QAAS,eAAgBC,OAAQ,oBAAqBpB,EAAAC,EAAAC,cAAA,kBAAUN,EAAKyB,WACpNrB,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,EAAK0B,gBACftB,EAAAC,EAAAC,cAAA,oBAAYN,EAAK2B,YACjBvB,EAAAC,EAAAC,cAAA,mBAAWN,EAAK4B,mBAItB,OAGExB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIW,MAAO,CAAEK,UAAW,SAAUD,WAAY,UAAWQ,MAAO,UAAhE,eACCzB,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAOC,SAAUrD,KAAKI,gBAEjCsB,EAAAC,EAAAC,cAAA,WACC5B,KAAKwB,WACNN,WAnEUoC,aA2ElBC,iBAAO7B,EAAAC,EAAAC,cAAChC,EAAD,MAAS4D,SAASC,eAAe","file":"static/js/main.be093df3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport jsonp from 'jsonp';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      songs: [],\n      name: 'React',\n      playSong: null\n         \n    };\n  }\n\n  searchHandler = (evt) => { \n    this.searchQuery(evt.target.value);\n    \n  }\n\n  searchQuery= (query) =>   {\n    const queryUrl = 'https://itunes.apple.com/search?media=music&limit=20&term=' + query;  \n  jsonp(queryUrl, null, (err, data) => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        this.setState({songs: data.results});\n        console.log(data.results)   }\n    });\n  }\n\nselectSong =(song) => {\n  this.setState({playSong: song});\n  console.log(song)\n}\n\nhearSong = () => {\n  if (this.state.playSong) {\n      console.log(\"new song\");\n      console.log(this.state.playSong);\n      return ( <div>\n                <ReactAudioPlayer\n                  src={this.state.playSong.previewUrl}\n                  autoPlay\n                  controls\n                />\n          </div>\n      );\n    }\n    \n}\n \n\n  render() {\n    const songs = this.state.songs.map(song => \n    <div onClick={this.selectSong.bind(this,song)} style={{ width: '200px', height: '300px', margin: '10px', background: '#F78DA7', textAlign: \"center\", display: \"inline-block\", border: \"1px solid black\" }}><p>Song: {song.trackName}</p>\n          <img src={song.artworkUrl100}/>\n          <p>Artist: {song.artistName}</p>\n          <p>Album: {song.collectionName}</p>\n    \n    </div>);\n\n    return (\n      \n     \n      <div>\n      <h1 style={{ textAlign: \"center\", background: \"#bf4d69\", color: \"white\" }}>Sing-a-long</h1>\n       <input type=\"text\" onChange={this.searchHandler}\n        />\n        <div>\n        {this.hearSong()}\n       {songs}\n       </div>\n      \n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}